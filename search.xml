<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>28min 全身锻炼(有氧&amp;无氧)</title>
      <link href="/2019/01/26/28min-%E5%85%A8%E8%BA%AB%E9%94%BB%E7%82%BC-%E6%9C%89%E6%B0%A7-%E6%97%A0%E6%B0%A7/"/>
      <url>/2019/01/26/28min-%E5%85%A8%E8%BA%AB%E9%94%BB%E7%82%BC-%E6%9C%89%E6%B0%A7-%E6%97%A0%E6%B0%A7/</url>
      <content type="html"><![CDATA[<p><em>内容整理自 bodybuiding: <a href="https://www.bodybuilding.com/content/the-28-minute-amrap-workout-to-build-muscle-and-burn-fat.html" target="_blank" rel="noopener">https://www.bodybuilding.com/content/the-28-minute-amrap-workout-to-build-muscle-and-burn-fat.html</a></em></p><h1 id="牢骚模块-赶时间跳过"><a href="#牢骚模块-赶时间跳过" class="headerlink" title="牢骚模块(赶时间跳过)"></a>牢骚模块(赶时间跳过)</h1><p>无意间在 bodybuilding 上看到了这篇文章，第一次接触这种以时间为周期的训练，对于差不多半年没锻炼的我来说，刚好可以把这个当做恢复锻炼的开始，如果真如作者说的那样，只用 28min 有氧无氧目的都能达到，那的确是不可多得的好计划，对于没时间的上班族而言，非常合适！<br><br></p><p>一个动作持续做五分钟，确实比想象中要难很多，四个动作，基本上就只能做到 70 到 90 次，前两个动作能够勉强连续完成，后面两个动作中间得暂停几秒，真的做的我大汗淋漓，特别酸爽。理论上中间休息 2 min，但实际上我都休息了 3min，实在是太累了，所以整套下来耗时大概在 35min 左右。周六做完，周日稍微有点腿疼，周一周二简直就是特别酸爽，走路都得横着走，胸、肩触碰会疼，周四才基本上完全恢复，可能和我好久没有锻炼突然这么大强度有关。这个计划应该够我锻炼一段时间了，就喜欢这种酸爽的感觉！<br><br></p><h1 id="计划介绍"><a href="#计划介绍" class="headerlink" title="计划介绍"></a>计划介绍</h1><ul><li><strong>原理：</strong> 基于 AMRAP 原理（As many reps as possible）</li><li><strong>耗时：</strong> 28min</li><li><strong>执行方法：</strong><ol><li>如下图片中的动作顺序，选取 20-25 reps  的重量</li><li>每个动作做 1 次，一次持续  5 min</li><li>尽可能做的多，不要在意速度，没力气可以放慢，最重要的是坚持, 若无法坚持，休息几秒后立刻进行</li><li>一个动作做完, 休息两分钟，进行下一个</li></ol></li></ul><p><img src="/image/full_body_exercise_time.jpg" alt="动作图片"></p>]]></content>
      
      <categories>
          
          <category> 健身 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 健身 </tag>
            
            <tag> 全身锻炼 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 使用 &amp; 问题</title>
      <link href="/2019/01/26/hexo/"/>
      <url>/2019/01/26/hexo/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><ul><li>百度收录<blockquote><p><a href="http://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">http://ziyuan.baidu.com/site/index</a></p></blockquote></li></ul><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h3><h4 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">现象：hexo d --debug 的时候发现 deploy 始终不成功，一直在卡住<br>配置 git 代理：<br>1. 搭建 shadowsocks 代理（自行谷歌）<br>2. 测试代理：curl --socks5 127.0.0.1:1086 http://cip.cc  (ss 的本地监听端口默认是1086，老版本默认是1080) <br>3. git 代理配置：<br>    git config --global http.proxy <span class="hljs-string">'socks5://127.0.0.1:1086'</span><br>    git config --global https.proxy <span class="hljs-string">'socks5://127.0.0.1:1086'</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>狗奴攻略</title>
      <link href="/2018/06/14/%E7%8B%97%E5%A5%B4%E6%94%BB%E7%95%A5/"/>
      <url>/2018/06/14/%E7%8B%97%E5%A5%B4%E6%94%BB%E7%95%A5/</url>
      <content type="html"><![CDATA[<h3 id="准备物品"><a href="#准备物品" class="headerlink" title="准备物品"></a>准备物品</h3><ul><li>食<ul><li>饮水器: 推荐那种倒挂舔着才出水的，避免弄洒</li><li>狗粮容器：如果是幼崽，同时是上班族，建议购买定时狗粮容器，注意：如果幼崽吃不了颗粒的狗粮，需要买能够承装泡软的湿狗粮的自动放粮器</li><li>狗粮</li><li>零食: 用于作为训练狗狗的奖励，除口臭饼干就可以，不过避免吃的太多，一次奖励半颗</li><li>羊奶: 刚刚断犬奶狗狗需要和羊奶</li></ul></li><li>住<ul><li>狗笼子：如果不想狗狗在家里搞破坏的话很有必要</li><li>床垫：买狗笼子可能会送</li><li>厕所: 一般送诱导剂，用于训练狗狗如厕</li><li>捡屎器: 买厕所一般会送</li><li>装屎袋：外出随地大小便要及时处理，文明出行</li><li>毛刷：用于梳理毛发</li><li>沐浴露：清爽除虱类的</li><li>玩具：用于磨牙锻炼</li></ul></li><li>行<ul><li>项圈、链子：通常一起卖，但也可以自己组合，买可伸缩的绳子，一定要耐咬</li><li>背包：小狗狗出门避免乱跑，被在身上，回头率杠杠的</li></ul></li></ul><h3 id="育苗接种"><a href="#育苗接种" class="headerlink" title="育苗接种"></a>育苗接种</h3><ul><li>对于新到家里未打过疫苗的狗狗，应调养观察10天左右，如果精神、食欲、排泄都正常，再去医院进行血常规化验后再打疫苗，只有健康的狗狗才可以打疫苗</li><li>幼犬在6周龄后首次接种，之后每隔3周接种1次，连续接种3次</li><li>接种疫苗后，狗狗免疫力会先下降后上升，一周内不要洗澡、避免换环境、避免去户外、避免口服抗生素、驱虫药</li><li>狗狗换环境半个月后再接种疫苗</li><li>接种后会出现食欲不振、体温升高、精神不佳，两个小时左右会消失</li><li>五个月后才打狂犬疫苗，狂犬疫苗对狗狗的脑部有破坏性，在五个月前脑部发育不完整</li><li>打完疫苗后最好在医院等15分钟后才离开，防止途中过敏</li><li>怀孕的狗狗、染病的狗狗、身体状况不好时的狗狗不能打疫苗</li></ul><h3 id="喂食事项"><a href="#喂食事项" class="headerlink" title="喂食事项"></a>喂食事项</h3><ul><li>食物最好以狗粮为主，可以选择一些，高蛋白，含钙高，营养丰富的天然粮</li><li>切忌喂得太饱，这样会造成拉稀甚至降低免疫力</li><li>水采用凉白开、或者矿泉水，或者使用带过滤功能的水机，避免生水，里面含有寄生虫</li><li>对于幼崽蛋黄隔一天吃一个，吃多了会上火</li><li>幼崽前一个月喝犬奶，犬奶不足配合羊奶粉，一个月后逐渐喂幼犬狗粮，1天喂食4次，一点一点喂，逐渐加量，期初采用水或奶泡软一些，适合消化，再逐渐改成干粮，每日零食量不要超过百分之五，不要喂人类食物</li><li>不要喂鲜牛奶，鸡骨头，鱼骨头，洋葱，大蒜，葡萄，口香糖，巧克力，辣椒，葱姜，杏、盐类</li><li>可以吃酸奶，苹果，香蕉，西瓜，梨等水果，适量。西瓜夜里别喂，尽量少吃太甜的水果</li><li>3个月后就不要喂泡软的食物，狗粮的硬度有助于牙齿健康，缓解长牙痛苦</li><li>3个月内狗狗尽量让它尝试多种狗粮，让其肠胃从小适应，避免以后接触新的食物就产生不良反应。但是切记要一点一点添加新粮</li><li>柴犬容易得皮肤病，容易肠胃差。小时候一定要喂益生菌类的，最好是酵母粉，断奶时候开始加离乳罐头，羊奶粉吃到俩月整，不用太补钙，五六个月开始喂三文鱼泥发毛，要想毛好骨架大，肉不能少，鸡肉牛肉三文鱼都不错，还能避免皮肤病。要经常梳毛</li></ul>]]></content>
      
      <categories>
          
          <category> 宠物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 狗 </tag>
            
            <tag> 狗奴 </tag>
            
            <tag> 养狗 </tag>
            
            <tag> 幼崽 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spark 终端快速开发</title>
      <link href="/2018/04/25/Spark-%E7%BB%88%E7%AB%AF%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91/"/>
      <url>/2018/04/25/Spark-%E7%BB%88%E7%AB%AF%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><ul><li><strong>使用场景：</strong> 为了快速响应开发，分析 HDFS 上存储的日志内容</li><li><strong>使用手段：</strong> 使用 spark shell 终端编写简单代码，将 HDFS 的内容解析入 Hive 库中，供查询开发</li><li><strong>准备条件：</strong> 具备 spark 终端的开发机，且能够直连 Hive</li></ul><h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><ol><li><p>进入 Spark 终端</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">// 单机本地启动方式<br>spark-shell <br><br>// 集群模式启动方式：若任务比较大，推荐此种方式<br>// num-executors 指分配多少个机器执行，memory 指每个机器上分配多大的内存，另外还可以设置核数、并行度等，具体参数可查询 “spark 启动参数配置”<br>spark-shell --master yarn --num-executors 10 --executor-memory 4G<br></code></pre></td></tr></table></figure></li><li><p>加载 HDFS 上的文件</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">// 假设需求为：解析 /data/britainwei/ 目录下按照日期份文件夹存放的日志信息<br>// 例：/data/britainwei/20180412/***.log 为其中的一个日志文件<br>// 注意：若文件不是 txt 或者 zip 压缩格式，需要使用别的方法替换 textFile() 方法<br>// 此时文件会被加载入 dataFile rdd 中<br>val dataFile = spark.read.textFile(&quot;/data/britainwei/*/*&quot;)<br></code></pre></td></tr></table></figure></li><li><p>将存有内容的 RDD 注册成临时表，即可像 SQL 中的表一样使用</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">// 此处注册成名为 “tmp” 的表<br>// 说明：未进行声明直接创建的表，只有一列名为 value 的 string 类型内容，此处 tmp 表中只有一列 value 的内容，每行对应我们文件中的一行内容<br>dataFile.createOrReplaceTempView(&quot;tmp&quot;)<br></code></pre></td></tr></table></figure></li><li><p>使用 SQL 方式取出想要的信息</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">// 直接在 SQL 中使用上面定义的表名 &quot;tmp&quot; 进行查询<br>// 假设我们日志中是按照空格分割的字段内容，此处解析出包含 &quot;parameter&quot; 内容的日志中的 time、info 字段<br>val result = spark.sql(&quot;select concat(split(value,&apos; &apos;)[0],split(value,&apos; &apos;)[1]) as time, split(value,&apos; &apos;)[5] as info, value from tmp where value like &apos;%parameter%&apos; &quot;)<br></code></pre></td></tr></table></figure></li><li><p>保存结果</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs undefined">// 直接显示内容（默认只显示 20 行）<br>result.show() <br><br>// 结果存入到 Hive 表中 （数据量大推荐此方式）<br>// 原理同上：先将结果注册成临时表，然后进行 SQL 插入操作<br>result.createOrReplaceTempView(&quot;splitTmpTable&quot;)<br>// 若要插入到已经存在的表，则可用 insert into 或者 insert overwrite 方式<br>spark.sql(&quot;create table as select * from splitTmpTable&quot;)<br></code></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> spark </tag>
            
            <tag> spark-shell </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <link href="/google6ab617d3d2f0c0c6.html"/>
      <url>/google6ab617d3d2f0c0c6.html</url>
      <content type="html"><![CDATA[google-site-verification: google6ab617d3d2f0c0c6.html]]></content>
    </entry>
    
    <entry>
      <title></title>
      <link href="/baidu_verify_FQ5udGvOrA.html"/>
      <url>/baidu_verify_FQ5udGvOrA.html</url>
      <content type="html"><![CDATA[FQ5udGvOrA]]></content>
    </entry>
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h4 id="闲言碎语"><a href="#闲言碎语" class="headerlink" title="闲言碎语"></a>闲言碎语</h4><p>随便写点东西，记录生活中的琐碎，多年后回顾应该会蛮有趣的</p><p>如果哪里有误导的地方，欢迎联系指正，谢谢！<br>邮箱：<a href="mailto:britainwei@163.com" target="_blank" rel="noopener">britainwei@163.com</a></p>]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
